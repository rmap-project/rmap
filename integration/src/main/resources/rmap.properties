# Developers - uncomment or specify any supported RMap properties in this file
# - 'mvn validate cargo:run' will use any values you set here

# OAuth configuration parameters
# rmapweb.google-oauth-enabled=false
# rmapweb.google-key=[enterGoogleOauthKey]
# rmapweb.google-secret=[enterGoogleOauthSecret]
# rmapweb.google-callback=https\://[yourServerName]/app/user/googlecallback
#
# rmapweb.orcid-oauth-enabled=false
# rmapweb.orcid-key=[orcidOauthKey]
# rmapweb.orcid-secret=[orcidOauthSecret]
# rmapweb.orcid-callback=https\://[yourServerName]/app/user/orcidcallback
#
# rmapweb.twitter-oauth-enabled=false
# rmapweb.twitter-key=[twitterOauthKey]
# rmapweb.twitter-secret=[twitterOauthSecret]
# rmapweb.twitter-callback=https\://[yourServerName]/app/user/twittercallback

#need these set to create and use administrator user
rmapauth.baseUrl=https\://fake.rmap-server.org
rmapcore.adminAgentUri=https\://fake.rmap-server.org#Administrator

#rmap admin tool enabled
rmapweb.admin-tool-enabled=true
rmapweb.admin-username=rmapAdmin
rmapweb.admin-password=rmapAdmin

# Database configuration parameters
#
authdb.driverClassName=org.postgresql.Driver
authdb.url=jdbc:postgresql://${docker.host.address}:${db.port}/postgres
authdb.username=postgres
authdb.password=
authdb.validationQuery=SELECT 1
authdb.testOnBorrow=true
authdb.hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect
authdb.hibernate.show_sql=false
authdb.hibernate.hbm2ddl.auto=update
authdb.hibernate.format_sql=true
authdb.hibernate.use_sql_comments=true

# In-Memory triple store configuration parameters
#
# rdf4jsail.dataDirectory=<absolute path to *existing* directory>

# HTTP triple store configuration parameters
#
# rdf4jhttp.repository.url=http\://[yourGraphDbServerName]/graphdb/
# rdf4jhttp.repository.name=[repositoryName]
# rdf4jhttp.repository.user=[respositoryUserName]
# rdf4jhttp.repository.password=[repositoryPwd]
rdf4jhttp.repository.user=
rdf4jhttp.repository.password=

# In-Memory ID service configuration parameters
#
# idservice.idPrefix=rmap:
# idservice.idLength=15
# idservice.idRegex=rmap:[a-z0-9]{10}

# HTTP ID service configuration parameters
#
# idservice.idMinterUrl=http\://localhost:8080/noid/noid.sh?2
# idservice.idPrefix=rmap:
# idservice.maxRetries=2
# idservice.replaceString=id:
# idservice.userName=
# idservice.userPassword=
# idservice.idLength=15
# idservice.idRegex=rmap:[a-z0-9]{10}
#
#Configuration options for contact/branding instance
#rmapweb.contact-email=rmap.project@gmail.com
#rmapweb.institution-name=The Sheridan Libraries at Johns Hopkins University
#rmapweb.institution-logo=/includes/images/instance_logo.png

rmap.solr.url=${rmap.solr.url}
bootstrap.servers=192.168.99.100:29029