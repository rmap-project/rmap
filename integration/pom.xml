<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>info.rmapproject</groupId>
        <artifactId>rmap-parent</artifactId>
        <version>1.0.1-beta-SNAPSHOT</version>
    </parent>

    <artifactId>rmap-integration</artifactId>
    <name>RMap Integration</name>
    <packaging>jar</packaging>

    <properties>
        <rmap.webapp.context>/app</rmap.webapp.context>
        <rmap.api.context>/api</rmap.api.context>
        <rdf4j.http.context>/rdf4j-server</rdf4j.http.context>
        <rdf4j.workbench.context>/rdf4j-workbench</rdf4j.workbench.context>
        <rdf4jhttp.repository.name>its</rdf4jhttp.repository.name>

        <!-- Kafka properties used to configure a broker for unit tests
(see also src/test/resources/kafka-broker.properties, resource plugin and surefire plugin config) -->
        <!-- Kafka doesn't like a mix of C:\ and / on Windows platform -->
        <kafka.broker.logs-dir>target/classes/kafka-broker</kafka.broker.logs-dir>
        <!-- separate multiple topics with a comma -->
        <kafka.broker.topics>rmap-event-topic</kafka.broker.topics>

        <RMAP_KAFKA_PORT>29092</RMAP_KAFKA_PORT>
        <KAFKA_ADVERTISED_LISTENERS>PLAINTEXT://${docker.host.address}:29092</KAFKA_ADVERTISED_LISTENERS>
        <ZOOKEEPER_CLIENT_PORT>32181</ZOOKEEPER_CLIENT_PORT>
        <KAFKA_ZOOKEEPER_CONNECT>zookeeper:32181</KAFKA_ZOOKEEPER_CONNECT>
        <KAFKA_BROKER_ID>1</KAFKA_BROKER_ID>
        <KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR>1</KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR>
        <ZOOKEEPER_TICK_TIME>2000</ZOOKEEPER_TICK_TIME>
        <SOLR_PORT>8983</SOLR_PORT>
        <SOLR_DEBUG_PORT>5005</SOLR_DEBUG_PORT>
    </properties>

    <dependencies>

        <dependency>
            <groupId>info.rmapproject</groupId>
            <artifactId>rmap-webapp</artifactId>
            <version>${project.parent.version}</version>
            <type>war</type>
        </dependency>

        <dependency>
            <groupId>info.rmapproject</groupId>
            <artifactId>rmap-spring-util</artifactId>
            <version>${project.parent.version}</version>
        </dependency>

        <dependency>
            <groupId>info.rmapproject</groupId>
            <artifactId>rmap-core</artifactId>
            <version>${project.parent.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.eclipse.rdf4j</groupId>
            <artifactId>rdf4j-http-server</artifactId>
            <type>war</type>
        </dependency>

        <dependency>
            <groupId>org.eclipse.rdf4j</groupId>
            <artifactId>rdf4j-http-workbench</artifactId>
            <type>war</type>
        </dependency>

        <dependency>
            <artifactId>postgresql</artifactId>
            <groupId>org.postgresql</groupId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
        </dependency>

        <dependency>
            <groupId>info.rmapproject</groupId>
            <artifactId>rmap-api</artifactId>
            <version>${project.parent.version}</version>
            <type>war</type>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <dependency>
            <groupId>info.rmapproject</groupId>
            <artifactId>rmap-auth</artifactId>
            <version>${project.parent.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>info.rmapproject</groupId>
            <artifactId>rmap-testdata</artifactId>
            <version>${project.parent.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>1</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>info.rmapproject</groupId>
            <artifactId>rmap-core</artifactId>
            <version>${project.parent.version}</version>
            <classifier>tests</classifier>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>info.rmapproject</groupId>
            <artifactId>rmap-kafka-shared</artifactId>
            <version>${project.parent.version}</version>
        </dependency>

        <dependency>
            <groupId>info.rmapproject</groupId>
            <artifactId>rmap-indexing-solr</artifactId>
            <version>${project.parent.version}</version>
        </dependency>

        <dependency>
            <groupId>info.rmapproject</groupId>
            <artifactId>rmap-indexing-solr</artifactId>
            <version>${project.parent.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>

        <plugins>

            <plugin>
                <artifactId>maven-remote-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>process-remote-resources</id>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <configuration>
                            <resourceBundles>
                                <resourceBundle>info.rmapproject:rmap-testdata:${project.parent.version}</resourceBundle>
                            </resourceBundles>
                            <outputDirectory>${project.build.testOutputDirectory}</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>info.rmapproject</groupId>
                        <artifactId>rmap-testdata</artifactId>
                        <version>${project.parent.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>reserve-port</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>reserve-network-port</goal>
                        </goals>
                        <configuration>
                            <portNames>
                                <portName>rmap.webapp.test.port</portName>
                                <portName>db.port</portName>
                            </portNames>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <images>
                        <image>
                            <alias>solrintegration</alias>
                            <run>
                                <wait>
                                    <http>
                                        <url>http://${docker.host.address}:${SOLR_PORT}/solr/discos/admin/ping</url>
                                    </http>
                                    <time>60000</time>
                                </wait>
                            </run>
                            <external>
                                <type>compose</type>
                                <basedir>target/test-classes/docker</basedir>
                                <composeFile>docker-compose.yaml</composeFile>
                            </external>
                        </image>
                        <image>
                            <alias>postgres</alias>
                            <name>postgres:latest</name>
                            <run>
                                <cmd>postgres</cmd>
                                <ports>
                                    <port>db.port:5432</port>
                                </ports>
                                <wait>
                                    <time>5000</time>
                                </wait>
                            </run>
                        </image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>start-docker-its</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop-docker-its</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-cli</id>
                        <configuration>
                            <images>
                                <image>
                                    <external>
                                        <type>compose</type>
                                        <basedir>src/test/resources/docker</basedir>
                                        <composeFile>docker-compose.yaml</composeFile>
                                    </external>
                                </image>
                            </images>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
                <version>1.6.3</version>
                <configuration>
                    <!-- Container configuration -->
                    <container>
                        <containerId>tomcat8x</containerId>
                        <type>installed</type>
						<timeout>180000</timeout>
                        <artifactInstaller>
                            <groupId>org.apache.tomcat</groupId>
                            <artifactId>tomcat</artifactId>
                            <version>8.0.44</version>
                            <type>tar.gz</type>
                        </artifactInstaller>
                        <systemProperties>
                            <cargo.servlet.port>${rmap.webapp.test.port}</cargo.servlet.port>
                            <rmap.configFile>file:///${project.basedir}/src/main/resources/rmap.properties</rmap.configFile>
                            <rdf4jhttp.repository.name>${rdf4jhttp.repository.name}</rdf4jhttp.repository.name>
                            <rdf4jhttp.repository.url>http://localhost:${rmap.webapp.test.port}/rdf4j-server</rdf4jhttp.repository.url>
                            <rdf4jhttp.workbench.url>http://localhost:${rmap.webapp.test.port}/rdf4j-workbench</rdf4jhttp.workbench.url>
                            <spring.profiles.active>default,integration-db,inmemory-idservice,integration-triplestore,http-solr,prod-kafka,auto-start-indexing</spring.profiles.active>
                            <org.eclipse.rdf4j.appdata.basedir>${project.build.testOutputDirectory}/rdf4j</org.eclipse.rdf4j.appdata.basedir>
                            <rmap.solr.url>http://${docker.host.address}:8983/solr</rmap.solr.url>
                            <bootstrap.servers>${docker.host.address}:29092</bootstrap.servers>
                            <logback.configurationFile>${project.basedir}/src/main/resources/logback.xml</logback.configurationFile>
                            <docker.host.address>${docker.host.address}</docker.host.address>
                            <db.port>${db.port}</db.port>
                        </systemProperties>
                        <dependencies>
                            <dependency>
                                <groupId>org.postgresql</groupId>
                                <artifactId>postgresql</artifactId>
                            </dependency>
                        </dependencies>
                    </container>
                    <deployables>

                        <deployable>
                            <groupId>info.rmapproject</groupId>
                            <artifactId>rmap-webapp</artifactId>
                            <type>war</type>
                            <properties>
                                <context>${rmap.webapp.context}</context>
                            </properties>
                        </deployable>

                        <deployable>
                            <groupId>info.rmapproject</groupId>
                            <artifactId>rmap-api</artifactId>
                            <type>war</type>
                            <properties>
                                <context>${rmap.api.context}</context>
                            </properties>
                        </deployable>

                        <deployable>
                            <groupId>org.eclipse.rdf4j</groupId>
                            <artifactId>rdf4j-http-server</artifactId>
                            <type>war</type>
                            <properties>
                                <context>${rdf4j.http.context}</context>
                            </properties>
                        </deployable>

                        <deployable>
                            <groupId>org.eclipse.rdf4j</groupId>
                            <artifactId>rdf4j-http-workbench</artifactId>
                            <type>war</type>
                            <properties>
                                <context>${rdf4j.workbench.context}</context>
                            </properties>
                        </deployable>


                    </deployables>

                    <configuration>
                        <properties>
                            <!-- <cargo.jvmargs>-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005 -Dlogback.debug=true </cargo.jvmargs> -->
                            <cargo.jvmargs>-Dorg.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH=true -Djava.util.logging.config.file=${project.basedir}/src/test/resources/logging.properties -Dlogback.configurationFile=src/main/resources/logback.xml</cargo.jvmargs>
                            <cargo.servlet.port>${rmap.webapp.test.port}</cargo.servlet.port>
                        </properties>
                        <!-- Spring 'integration-db' beans -->
                        <files>
                            <copy>
                                <file>${project.basedir}/src/main/resources/integration-db.properties</file>
                                <todir>shared/classes</todir>
                            </copy>
                            <copy>
                                <file>${project.basedir}/src/main/resources/integration-db.xml</file>
                                <todir>shared/classes</todir>
                            </copy>
                            <copy>
                                <file>${project.basedir}/src/main/resources/integration-triplestore.properties</file>
                                <todir>shared/classes</todir>
                            </copy>
                            <copy>
                                <file>${project.basedir}/src/main/resources/integration-triplestore.xml</file>
                                <todir>shared/classes</todir>
                            </copy>
                            <copy>
                                <file>${project.basedir}/src/main/resources/logback.xml</file>
                                <todir>shared/classes</todir>
                            </copy>
                        </files>
                    </configuration>

                </configuration>
                <executions>
                    <execution>
                        <id>start-container</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop-container</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-cli</id>
                        <configuration>
                            <container>
                                <systemProperties>
                                    <spring.profiles.active>default,integration-db,inmemory-idservice,integration-triplestore,http-solr,prod-kafka,auto-start-indexing</spring.profiles.active>
                                    <rmap.configFile>file:///${project.basedir}/src/main/resources/rmap.properties</rmap.configFile>
                                    <logback.configurationFile>${project.basedir}/src/main/resources/logback.xml</logback.configurationFile>
                                    <org.eclipse.rdf4j.appdata.basedir>${project.build.testOutputDirectory}/rdf4j</org.eclipse.rdf4j.appdata.basedir>
                                    <rdf4jhttp.repository.name>${rdf4jhttp.repository.name}</rdf4jhttp.repository.name>
                                    <rdf4jhttp.repository.url>http://localhost:${rmap.webapp.test.port}/rdf4j-server</rdf4jhttp.repository.url>
                                    <rdf4jhttp.workbench.url>http://localhost:${rmap.webapp.test.port}/rdf4j-workbench</rdf4jhttp.workbench.url>
                                    <rmap.solr.url>http://${docker.host.address}:8983/solr</rmap.solr.url>
                                    <bootstrap.servers>${docker.host.address}:29092</bootstrap.servers>
                                    <docker.host.address>${docker.host.address}</docker.host.address>
                                    <db.port>${db.port}</db.port>
                                </systemProperties>
                            </container>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <systemProperties>
                        <logback.configurationFile>${project.basedir}/src/main/resources/logback.xml</logback.configurationFile>
                        <rmap.webapp.test.port>${rmap.webapp.test.port}</rmap.webapp.test.port>
                        <rmap.webapp.context>${rmap.webapp.context}</rmap.webapp.context>
                        <rmap.api.context>${rmap.api.context}</rmap.api.context>
                        <rdf4j.http.context>${rdf4j.http.context}</rdf4j.http.context>
                        <rdf4j.workbench.context>${rdf4j.workbench.context}</rdf4j.workbench.context>
                        <rmap.configFile>file:///${project.basedir}/src/main/resources/rmap.properties</rmap.configFile>
                        <spring.profiles.active>default,integration-db,inmemory-idservice,integration-triplestore,http-solr,prod-kafka,auto-start-indexing</spring.profiles.active>
                        <rdf4jhttp.repository.name>${rdf4jhttp.repository.name}</rdf4jhttp.repository.name>
                        <rdf4jhttp.repository.url>http://localhost:${rmap.webapp.test.port}/rdf4j-server</rdf4jhttp.repository.url>
                        <rdf4jhttp.workbench.url>http://localhost:${rmap.webapp.test.port}/rdf4j-workbench</rdf4jhttp.workbench.url>
                        <rmap.solr.url>http://${docker.host.address}:8983/solr</rmap.solr.url>
                        <bootstrap.servers>${docker.host.address}:29092</bootstrap.servers>
                        <docker.host.address>${docker.host.address}</docker.host.address>
                        <db.port>${db.port}</db.port>
                    </systemProperties>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>

    </build>

</project>
