<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- Enables the Spring MVC @Controller programming model -->
	<context:property-placeholder location="${rmap.configFile}" ignore-resource-not-found="true" ignore-unresolvable="true"/>
	<context:property-placeholder location="classpath*:/rmapcore.properties, classpath*:/rmapauth.properties, classpath*:/rmapweb.properties" ignore-unresolvable="true"/>
	<annotation-driven />
	<context:component-scan base-package="info.rmapproject" />

	<beans:import resource="classpath:/spring-rmapauth-context.xml" />

	<!-- Handles HTTP GET requests for /includes/** by efficiently serving up static resources in the ${webappRoot}/includes directory -->
	<resources mapping="/includes/**" location="/includes/" />

	<beans:bean id="typemappingsBundle" name="typemappings" class="org.springframework.context.support.ResourceBundleMessageSource">
		<beans:property name="basename" value="typemappings"/>
	</beans:bean>

	<beans:bean id="nodetypesBundle" name="nodetypes" class="org.springframework.context.support.ResourceBundleMessageSource">
		<beans:property name="basename" value="nodetypes"/>
	</beans:bean>

	<beans:bean id="ontologyprefixesBundle" name="ontologyprefixes" class="org.springframework.context.support.ResourceBundleMessageSource">
		<beans:property name="basename" value="ontologyprefixes"/>
	</beans:bean>

	<beans:bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<beans:property name="staticMethod" value="info.rmapproject.webapp.utils.WebappUtils.setPrefixes"/>
		<beans:property name="arguments">
			<beans:list>
				<beans:ref bean="ontologyprefixesBundle"/>
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<beans:property name="staticMethod" value="info.rmapproject.webapp.utils.WebappUtils.setTypeMappings"/>
		<beans:property name="arguments">
			<beans:list>
				<beans:ref bean="typemappingsBundle"/>
			</beans:list>
		</beans:property>
	</beans:bean>
	<beans:bean id="graphFactory" class="info.rmapproject.webapp.service.SpringGraphFactory">
		<beans:property name="ontologies" ref="ontologyprefixes"/>
		<beans:property name="typemappings" ref="typemappings"/>
		<beans:property name="nodeTypes" ref="nodetypes"/>
	</beans:bean>
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<beans:bean id="dataDisplayService" class="info.rmapproject.webapp.service.DataDisplayServiceImpl">
		<beans:property name="maxObjGraphRelationships" value="${rmapweb.max-object-graph-relationships}"/>
		<beans:property name="maxResGraphRelationships" value="${rmapweb.max-resource-graph-relationships}"/>
		<beans:property name="maxAgentDiSCOs" value="${rmapweb.max-agent-discos}"/>
		<beans:property name="maxTableRows" value="${rmapweb.max-table-rows}"/>
		<beans:property name="maxResRelatedDiSCOs" value="${rmapweb.max-resource-related-discos}"/>
		<beans:property name="maxNodeInfoRows" value="${rmapweb.max-node-info-rows}"/>
	</beans:bean>

	<!-- OAUTH Configuration -->		
	<!-- twitter oauth config -->	
	<beans:bean id="twitterOAuthConfig" class="info.rmapproject.webapp.auth.OAuthProviderConfig">
		<beans:constructor-arg value="TWITTER"/>
		<beans:constructor-arg value="${rmapweb.twitter-key}" />
		<beans:constructor-arg value="${rmapweb.twitter-secret}"/>
		<beans:constructor-arg value="${rmapweb.twitter-callback}"/>
		<beans:constructor-arg value="com.github.scribejava.apis.TwitterApi.Authenticate"/>
		<beans:constructor-arg value="https://api.twitter.com/1.1/account/verify_credentials.json"/>
	</beans:bean>	  
	<beans:bean id="oAuthProviderTwitter" class="info.rmapproject.webapp.auth.TwitterOAuthProvider">
		<beans:property name="config" ref="twitterOAuthConfig"/>	
	</beans:bean>
	
	<!-- google oauth config -->			
	<beans:bean id="googleOAuthConfig" class="info.rmapproject.webapp.auth.OAuthProviderConfig">
		<beans:constructor-arg value="GOOGLE"/>
		<beans:constructor-arg value="${rmapweb.google-key}" />
		<beans:constructor-arg value="${rmapweb.google-secret}"/>
		<beans:constructor-arg value="${rmapweb.google-callback}"/>
		<beans:constructor-arg value="com.github.scribejava.apis.GoogleApi20"/>
		<beans:constructor-arg value="email"/>
		<beans:constructor-arg value="https://www.googleapis.com/plus/v1/people/me"/>
	</beans:bean>	
	<beans:bean id="oAuthProviderGoogle" class="info.rmapproject.webapp.auth.GoogleOAuthProvider">
		<beans:property name="config" ref="googleOAuthConfig"/>	
	</beans:bean>
	
	<!-- orcid oauth config -->	
	<beans:bean id="orcidOAuthConfig" class="info.rmapproject.webapp.auth.OAuthProviderConfig">
		<beans:constructor-arg value="ORCID"/>
		<beans:constructor-arg value="${rmapweb.orcid-key}" />
		<beans:constructor-arg value="${rmapweb.orcid-secret}"/>
		<beans:constructor-arg value="${rmapweb.orcid-callback}"/> 
		<beans:constructor-arg value="info.rmapproject.webapp.auth.OrcidApi20"/>
		<beans:constructor-arg value="/authenticate"/>
		<beans:constructor-arg value="https://pub.orcid.org/v1.2/"/>
	</beans:bean> 
	<beans:bean id="oAuthProviderOrcid" class="info.rmapproject.webapp.auth.OrcidOAuthProvider">
		<beans:property name="config" ref="orcidOAuthConfig"/>	
	</beans:bean>
	
	<!-- prevents a problem where URL paths are decoded automatically-->
	<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
	  <beans:property name="order" value="-1"></beans:property>
      <beans:property name="useSuffixPatternMatch" value="false"/>
	  <beans:property name="urlPathHelper">
	    <beans:bean class="info.rmapproject.webapp.utils.UrlPathHelperNonDecoding"/>
	  </beans:property>
	</beans:bean>

	<interceptors>
		<interceptor>
			<mapping path="/user/**"/>
			<beans:bean class="info.rmapproject.webapp.auth.AuthenticationInterceptor" />
		</interceptor>
	</interceptors>	
	
</beans:beans>
