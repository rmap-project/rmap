<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:property-placeholder location="classpath:/rmapcore.properties" ignore-unresolvable="true"/>
	<context:component-scan base-package="info.rmapproject.core"/>
	<context:component-scan base-package="info.rmapproject.kafka"/>

	<bean id="idSupplier" class="info.rmapproject.core.idservice.IdServiceSupplier"/>
    <bean id="rdfHandler" class="info.rmapproject.core.rdfhandler.impl.rdf4j.RioRDFHandler"/>

	<bean id="abstractManager" class="info.rmapproject.core.rmapservice.impl.rdf4j.ORMapObjectMgr" abstract="true"/>

 	<bean id="resourcemgr" class="info.rmapproject.core.rmapservice.impl.rdf4j.ORMapResourceMgr" scope="prototype" parent="abstractManager"/>
 	<bean id="discomgr" class="info.rmapproject.core.rmapservice.impl.rdf4j.ORMapDiSCOMgr" scope="prototype" parent="abstractManager"/>
 	<bean id="statementmgr" class="info.rmapproject.core.rmapservice.impl.rdf4j.ORMapStatementMgr" scope="prototype" parent="abstractManager"/>
 	<bean id="eventmgr" class="info.rmapproject.core.rmapservice.impl.rdf4j.ORMapEventMgr" scope="prototype" parent="abstractManager"/>
 	<bean id="agentmgr" class="info.rmapproject.core.rmapservice.impl.rdf4j.ORMapAgentMgr" parent="abstractManager" scope="prototype"/>
	<bean id="rmapSearchParams" class="info.rmapproject.core.model.request.RMapSearchParams" scope="prototype" parent="abstractManager"/>

	<bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
		<property name="converters">
			<set>
				<bean class="info.rmapproject.core.model.RMapStatusFilterConverter"/>
				<bean class="info.rmapproject.core.model.OrderByConverter"/>
			</set>
		</property>
	</bean>

	<!-- production kafka config, from rmap-kafka-shared module -->
	<beans profile="prod-kafka">
		<import resource="classpath*:/rmap-kafka-shared.xml"/>
	</beans>

	<!-- production triplestore -->
	<beans profile="http-triplestore">
		<context:property-placeholder location="classpath*:/http-triplestore.properties" ignore-unresolvable="true"/>
		<bean primary="true" id="httpTriplestore" class="info.rmapproject.core.rmapservice.impl.rdf4j.triplestore.Rdf4jHttpTriplestore" scope="prototype">
			<property name="rdf4jUrl" value="${rdf4jhttp.repository.url}"/>
			<property name="rdf4jReposName" value="${rdf4jhttp.repository.name}"/>
			<property name="rdf4jUserName" value="${rdf4jhttp.repository.user}"/>
			<property name="rdf4jPassword" value="${rdf4jhttp.repository.password}"/>
		</bean>
	</beans>

	<!-- integration triplestore, from integration module -->
	<beans profile="integration-triplestore">
		<import resource="classpath*:/integration-triplestore.xml"/>
	</beans>

	<!-- production http id service -->
	<beans profile="http-idservice">
		<context:property-placeholder location="classpath*:/http-idservice.properties" ignore-unresolvable="true"/>
		<bean id="httpUrlIdService" class="info.rmapproject.core.idservice.HttpUrlIdService">
			<property name="serviceUrl" value="${idservice.idMinterUrl}"/>
			<property name="idPrefix" value="${idservice.idPrefix}"/>
			<property name="maxRetryAttempts" value="${idservice.maxRetries}"/>
			<property name="replaceString" value="${idservice.replaceString}"/>
			<property name="userName" value="${idservice.userName}"/>
			<property name="userPassword" value="${idservice.userPassword}"/>
			<property name="idLength" value="${idservice.idLength}"/>
			<property name="idRegex" value="${idservice.idRegex}"/>
		</bean>
	</beans>

	<!-- production ezid service -->
	<beans profile="ark-idservice">
		<context:property-placeholder location="classpath*:/http-arkidservice.properties" ignore-unresolvable="true"/>
		<bean id="httpArkIdService" class="info.rmapproject.core.idservice.HttpArkIdService">
			<property name="serviceUrl" value="${idservice.idMinterUrl}"/>
			<property name="idPrefix" value="${idservice.idPrefix}"/>
			<property name="maxRetryAttempts" value="${idservice.maxRetries}"/>
			<property name="userName" value="${idservice.userName}"/>
			<property name="userPassword" value="${idservice.userPassword}"/>
			<property name="idLength" value="${idservice.idLength}"/>
			<property name="idRegex" value="${idservice.idRegex}"/>
			<property name="maxStoreSize" value="${idservice.maxStoreSize}"/>
			<property name="idStoreFile" value="${idservice.idStoreFile}"/>
		</bean>
	</beans>

	<!-- unit tests and integration tests -->
	<beans profile="inmemory-idservice">
		<context:property-placeholder location="classpath*:/inmemory-idservice.properties" ignore-unresolvable="true"/>
		<bean primary="true" id="inMemoryIdService" class="info.rmapproject.core.idservice.RandomStringIdService">
			<property name="idPrefix" value="${idservice.idPrefix}"/>
			<property name="idLength" value="${idservice.idLength}"/>
			<property name="idRegex" value="${idservice.idRegex}"/>
		</bean>
	</beans>

	<!-- unit tests -->
	<beans profile="inmemory-triplestore">
		<context:property-placeholder location="classpath*:/inmemory-triplestore.properties" ignore-unresolvable="true"/>
		<bean primary="true" id="inMemoryTriplestore" class="info.rmapproject.core.rmapservice.impl.rdf4j.triplestore.Rdf4jSailMemoryTriplestore">
			<property name="dataDirectory" value="${rdf4jsail.dataDirectory}"/>
		</bean>
	</beans>

</beans>
