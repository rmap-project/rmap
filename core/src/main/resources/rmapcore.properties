#############################
#  	  rmap core props	 	#
#############################
#number of rdf statements returned before pagination required
rmapcore.defaultQueryLimit=200
#maximum number of rdf statements that can be returned in a single query
rmapcore.maxQueryLimit=2000
#options are active, inactive, all. This filter on status will apply
#where no status filter is specified. The status refers to the status of the 
#DiSCO containing the data 
rmapcore.defaultStatusFilter=active
#options are UNORDERED (no ordering) applied to results or SELECT_ORDER (i.e. orders columns selected alpha-numerically)
#UNORDERED may result in tiny ordering inconsistencies when using pagination at the same time that data is being
#written to the database. SELECT_ORDER is significantly performance-wise slower but will eliminate skipped 
#or repeated records where reads and writes are happening simultaneously. 
rmapcore.defaultOrderBy=UNORDERED
# If you specify an Admin Agent URI, currently this Agent will be able to tombstone or hard delete a DiSCO on behalf 
# of another Agent. In general Agents can only edit their own DiSCOs - this is the exception.  
rmapcore.adminAgentUri=[YourRMapHomePage]#Administrator
# Specifies a Spring resource containing properties that are used to override defaults
# - a deployer can create the file 'rmap.properties' and place it at the root level of the classpath, and specify values
#   for any supported RMap configuration property.  The specified values will override any default values shipped with
#   RMap
# - a deployer can define the value of the 'rmap.configFile' property to point to a location external to the classpath,
#   e.g file:///path/to/rmap.properties
rmap.configFile=classpath:/rmap.properties